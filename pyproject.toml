[project]
name = "flask-imp"
version = "6.0.0-beta.1"
description = 'A Flask auto importer that allows your Flask apps to grow big.'
authors = [{ name = "David Carmichael", email = "david@uilix.com" }]
readme = "README.md"
license = { file = "LICENSE.txt" }
classifiers = [
    'Development Status :: 5 - Production/Stable',
    "License :: OSI Approved :: MIT License",
    "Framework :: Flask",
    "Natural Language :: English",
]
requires-python = ">=3.9"
dependencies = [
    'click',
    'Flask',
    'Flask-SQLAlchemy',
    'more-itertools'
]

[project.urls]
Documentation = "https://cheesecake87.github.io/flask-imp/"
Source = "https://github.com/CheeseCake87/flask-imp"

[project.scripts]
flask-imp = "flask_imp._cli:cli"

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.pyqwe]
build = "*:flit build"
install = "*:flit install --symlink"
docs = "*:flask --app docs compile"
docs-watch = "*:flask --app gdocs compile --watch"

[tool.flit.sdist]
exclude = [
    ".github",
    "_assets",
    "app",
    "instance",
    "dist",
    "docs",
    "tests_docker",
    ".gitignore",
    ".env",
    "CONTRIBUTING.md",
]

[tool.mypy]
python_version = "3.9"
files = ["src/flask_imp"]
show_error_codes = true
pretty = true
strict = true

[tool.pyright]
pythonVersion = "3.9"
include = ["src/flask_imp"]
typeCheckingMode = "basic"

[tool.ruff]
src = ["src"]
fix = true
show-fixes = true
output-format = "full"

[tool.tox]
legacy_tox_ini = """
[tox]
; DROPPED 3.9
envlist =
    py3{13,12,11,10}
    style
    typing
    docs
skip_missing_interpreters = true

[testenv]
package = wheel
wheel_build_env = .pkg
constrain_package_deps = true
use_frozen_constraints = true
deps = -r requirements/tests.txt
commands = pytest -v --tb=short --basetemp={envtmpdir} {posargs}

[testenv:style]
deps = pre-commit
skip_install = true
commands = pre-commit run --all-files

[testenv:typing]
deps = -r requirements/typing.txt
commands =
    mypy
    pyright
    pyright --verifytypes flask_imp --ignoreexternal

[testenv:docs]
deps = -r requirements/docs.txt
commands = sphinx-build -E -W -b dirhtml docs docs/_build/dirhtml

[testenv:update-actions]
labels = update
deps = gha-update
skip_install = true
commands = gha-update

[testenv:update-pre_commit]
labels = update
deps = pre-commit
skip_install = true
commands = pre-commit autoupdate -j4

[testenv:update-requirements]
labels = update
deps = pip-tools
skip_install = true
change_dir = requirements
commands =
    pip-compile build.in -q {posargs:-U}
    pip-compile docs.in -q {posargs:-U}
    pip-compile tests.in -q {posargs:-U}
    pip-compile typing.in -q {posargs:-U}
    pip-compile dev.in -q {posargs:-U}
"""
